/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['runtime.js']) {
  _$jscoverage['runtime.js'] = [];
  _$jscoverage['runtime.js'][19] = 0;
  _$jscoverage['runtime.js'][22] = 0;
  _$jscoverage['runtime.js'][29] = 0;
  _$jscoverage['runtime.js'][32] = 0;
  _$jscoverage['runtime.js'][34] = 0;
  _$jscoverage['runtime.js'][35] = 0;
  _$jscoverage['runtime.js'][36] = 0;
  _$jscoverage['runtime.js'][37] = 0;
  _$jscoverage['runtime.js'][43] = 0;
  _$jscoverage['runtime.js'][44] = 0;
  _$jscoverage['runtime.js'][45] = 0;
  _$jscoverage['runtime.js'][46] = 0;
  _$jscoverage['runtime.js'][47] = 0;
  _$jscoverage['runtime.js'][48] = 0;
  _$jscoverage['runtime.js'][49] = 0;
  _$jscoverage['runtime.js'][50] = 0;
  _$jscoverage['runtime.js'][52] = 0;
  _$jscoverage['runtime.js'][55] = 0;
  _$jscoverage['runtime.js'][56] = 0;
  _$jscoverage['runtime.js'][57] = 0;
  _$jscoverage['runtime.js'][58] = 0;
  _$jscoverage['runtime.js'][59] = 0;
  _$jscoverage['runtime.js'][60] = 0;
  _$jscoverage['runtime.js'][61] = 0;
  _$jscoverage['runtime.js'][63] = 0;
  _$jscoverage['runtime.js'][66] = 0;
  _$jscoverage['runtime.js'][67] = 0;
  _$jscoverage['runtime.js'][68] = 0;
  _$jscoverage['runtime.js'][69] = 0;
  _$jscoverage['runtime.js'][70] = 0;
  _$jscoverage['runtime.js'][71] = 0;
  _$jscoverage['runtime.js'][72] = 0;
  _$jscoverage['runtime.js'][73] = 0;
  _$jscoverage['runtime.js'][78] = 0;
  _$jscoverage['runtime.js'][79] = 0;
  _$jscoverage['runtime.js'][80] = 0;
  _$jscoverage['runtime.js'][81] = 0;
  _$jscoverage['runtime.js'][82] = 0;
  _$jscoverage['runtime.js'][83] = 0;
  _$jscoverage['runtime.js'][84] = 0;
  _$jscoverage['runtime.js'][85] = 0;
  _$jscoverage['runtime.js'][90] = 0;
  _$jscoverage['runtime.js'][91] = 0;
  _$jscoverage['runtime.js'][92] = 0;
  _$jscoverage['runtime.js'][93] = 0;
  _$jscoverage['runtime.js'][94] = 0;
  _$jscoverage['runtime.js'][95] = 0;
}
_$jscoverage['runtime.js'].source = ["// runtime.js","// the WF object and built-in runtime functions","// &#194;&#169; Harald Rudell 2012","// code may run on server or in browser","","/*","cx object:","cx.tag: content: the html  of the opening tag '&lt;div class=content&gt;' null for location 0","cx.content: string: the element content up to the first child tag or closing tag: 'text' null for location 0","cx.tagData data structure for the tag or {} for location 0","cx.record the record object provided to render","","cx.print(string): prints data escaped for html","cx.printRaw(string): prints including tags","cx.error(Error object): ability to indicate an error condition","","params: the bindings object value following the function name","*/",";(function (isNode) {","","\t// a seed WF if WF is not defined (it isn't)","\tvar WF = {","\t\tfragments: {},","\t\tfunctions: {},","\t\tdirectory: {},","\t}","","\t// export or import WF","\tif (isNode) module.exports.WF = WF","\telse {","\t\t// in the browser this refers to the elusive global object","\t\tif (typeof this.WF != 'object') this.WF = WF","\t\telse {","\t\t\tWF = this.WF // import some WF object we found","\t\t\tif (typeof WF.fragments != 'object') WF.fragments = {}","\t\t\tif (typeof WF.functions != 'object') WF.functions = {}","\t\t\tif (typeof WF.directory != 'object') WF.directory = {}","\t\t}","\t}","","\t// built-in render functions","","\tWF.functions.append = function(params) {","\t\tthis.print(this.content)","\t\tthis.suppressContent()","\t\tvar data = this.getField(params)","\t\tif (typeof data == 'object') {","\t\t\tvar result = []","\t\t\tfor (var p in data) result.push(p + ':' + data[p])","\t\t\tdata = result.join(', ')","\t\t}","\t\tthis.print(data)","\t}","","\tWF.functions.replace = function (params) {","\t\tthis.suppressContent()","\t\tvar data = this.getField(params)","\t\tif (typeof data == 'object') {","\t\t\tvar result = []","\t\t\tfor (var p in data) result.push(p + ':' + data[p])","\t\t\tdata = result.join(', ')","\t\t}","\t\tthis.print(data)","\t}","","\tvar classRegExp = /[^ \\t\\n\\f\\r]+/gm","\tWF.functions.addClass = function (params) {","\t\tparams = String(params)","\t\tvar classArray = params.match(classRegExp)","\t\tif (classArray) {","\t\t\tvar classes = this.cloneTag().c","\t\t\tclassArray.forEach(function (className) {","\t\t\t\tif (!~classes.indexOf(className)) classes.push(className)","\t\t\t})","\t\t}","\t}","","\tWF.functions.removeClass = function (params) {","\t\tparams = String(params)","\t\tvar classArray = params.match(classRegExp)","\t\tif (classArray) {","\t\t\tvar classes = this.cloneTag().c","\t\t\tclassArray.forEach(function (className) {","\t\t\t\tvar index = classes.indexOf(className)","\t\t\t\tif (~index) classes.splice(index, 1)","\t\t\t})","\t\t}","\t}","","\tWF.functions.attribute = function (params) {","\t\tvar attributes = this.cloneTag().a","\t\tfor (var attributeName in params) {","\t\t\tvar value = params[attributeName]","\t\t\tif (value === false) delete attributes[attributeName]","\t\t\telse attributes[attributeName] = String(value)","\t\t}","\t}","","})(typeof module == 'object' &amp;&amp; !!module.exports)"];
_$jscoverage['runtime.js'][19]++;
;
_$jscoverage['runtime.js'][19]++;
(function (isNode) {
  _$jscoverage['runtime.js'][22]++;
  var WF = {fragments: {}, functions: {}, directory: {}};
  _$jscoverage['runtime.js'][29]++;
  if (isNode) {
    _$jscoverage['runtime.js'][29]++;
    module.exports.WF = WF;
  }
  else {
    _$jscoverage['runtime.js'][32]++;
    if (((typeof this.WF) != "object")) {
      _$jscoverage['runtime.js'][32]++;
      this.WF = WF;
    }
    else {
      _$jscoverage['runtime.js'][34]++;
      WF = this.WF;
      _$jscoverage['runtime.js'][35]++;
      if (((typeof WF.fragments) != "object")) {
        _$jscoverage['runtime.js'][35]++;
        WF.fragments = {};
      }
      _$jscoverage['runtime.js'][36]++;
      if (((typeof WF.functions) != "object")) {
        _$jscoverage['runtime.js'][36]++;
        WF.functions = {};
      }
      _$jscoverage['runtime.js'][37]++;
      if (((typeof WF.directory) != "object")) {
        _$jscoverage['runtime.js'][37]++;
        WF.directory = {};
      }
    }
  }
  _$jscoverage['runtime.js'][43]++;
  WF.functions.append = (function (params) {
  _$jscoverage['runtime.js'][44]++;
  this.print(this.content);
  _$jscoverage['runtime.js'][45]++;
  this.suppressContent();
  _$jscoverage['runtime.js'][46]++;
  var data = this.getField(params);
  _$jscoverage['runtime.js'][47]++;
  if (((typeof data) == "object")) {
    _$jscoverage['runtime.js'][48]++;
    var result = [];
    _$jscoverage['runtime.js'][49]++;
    for (var p in data) {
      _$jscoverage['runtime.js'][49]++;
      result.push((p + ":" + data[p]));
}
    _$jscoverage['runtime.js'][50]++;
    data = result.join(", ");
  }
  _$jscoverage['runtime.js'][52]++;
  this.print(data);
});
  _$jscoverage['runtime.js'][55]++;
  WF.functions.replace = (function (params) {
  _$jscoverage['runtime.js'][56]++;
  this.suppressContent();
  _$jscoverage['runtime.js'][57]++;
  var data = this.getField(params);
  _$jscoverage['runtime.js'][58]++;
  if (((typeof data) == "object")) {
    _$jscoverage['runtime.js'][59]++;
    var result = [];
    _$jscoverage['runtime.js'][60]++;
    for (var p in data) {
      _$jscoverage['runtime.js'][60]++;
      result.push((p + ":" + data[p]));
}
    _$jscoverage['runtime.js'][61]++;
    data = result.join(", ");
  }
  _$jscoverage['runtime.js'][63]++;
  this.print(data);
});
  _$jscoverage['runtime.js'][66]++;
  var classRegExp = /[^ \t\n\f\r]+/gm;
  _$jscoverage['runtime.js'][67]++;
  WF.functions.addClass = (function (params) {
  _$jscoverage['runtime.js'][68]++;
  params = String(params);
  _$jscoverage['runtime.js'][69]++;
  var classArray = params.match(classRegExp);
  _$jscoverage['runtime.js'][70]++;
  if (classArray) {
    _$jscoverage['runtime.js'][71]++;
    var classes = this.cloneTag().c;
    _$jscoverage['runtime.js'][72]++;
    classArray.forEach((function (className) {
  _$jscoverage['runtime.js'][73]++;
  if ((! (~ classes.indexOf(className)))) {
    _$jscoverage['runtime.js'][73]++;
    classes.push(className);
  }
}));
  }
});
  _$jscoverage['runtime.js'][78]++;
  WF.functions.removeClass = (function (params) {
  _$jscoverage['runtime.js'][79]++;
  params = String(params);
  _$jscoverage['runtime.js'][80]++;
  var classArray = params.match(classRegExp);
  _$jscoverage['runtime.js'][81]++;
  if (classArray) {
    _$jscoverage['runtime.js'][82]++;
    var classes = this.cloneTag().c;
    _$jscoverage['runtime.js'][83]++;
    classArray.forEach((function (className) {
  _$jscoverage['runtime.js'][84]++;
  var index = classes.indexOf(className);
  _$jscoverage['runtime.js'][85]++;
  if ((~ index)) {
    _$jscoverage['runtime.js'][85]++;
    classes.splice(index, 1);
  }
}));
  }
});
  _$jscoverage['runtime.js'][90]++;
  WF.functions.attribute = (function (params) {
  _$jscoverage['runtime.js'][91]++;
  var attributes = this.cloneTag().a;
  _$jscoverage['runtime.js'][92]++;
  for (var attributeName in params) {
    _$jscoverage['runtime.js'][93]++;
    var value = params[attributeName];
    _$jscoverage['runtime.js'][94]++;
    if ((value === false)) {
      _$jscoverage['runtime.js'][94]++;
      (delete attributes[attributeName]);
    }
    else {
      _$jscoverage['runtime.js'][95]++;
      attributes[attributeName] = String(value);
    }
}
});
})((((typeof module) == "object") && (! (! module.exports))));

WF.fragments["frag.index"]={"domain":"index","dataLinks":[],"pieces":["","<div>","frag.index","</div>"]};
// index_1.js
// index_2.js
/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['renderer.js']) {
  _$jscoverage['renderer.js'] = [];
  _$jscoverage['renderer.js'][6] = 0;
  _$jscoverage['renderer.js'][8] = 0;
  _$jscoverage['renderer.js'][11] = 0;
  _$jscoverage['renderer.js'][13] = 0;
  _$jscoverage['renderer.js'][16] = 0;
  _$jscoverage['renderer.js'][28] = 0;
  _$jscoverage['renderer.js'][29] = 0;
  _$jscoverage['renderer.js'][32] = 0;
  _$jscoverage['renderer.js'][33] = 0;
  _$jscoverage['renderer.js'][34] = 0;
  _$jscoverage['renderer.js'][38] = 0;
  _$jscoverage['renderer.js'][39] = 0;
  _$jscoverage['renderer.js'][40] = 0;
  _$jscoverage['renderer.js'][41] = 0;
  _$jscoverage['renderer.js'][42] = 0;
  _$jscoverage['renderer.js'][43] = 0;
  _$jscoverage['renderer.js'][44] = 0;
  _$jscoverage['renderer.js'][47] = 0;
  _$jscoverage['renderer.js'][59] = 0;
  _$jscoverage['renderer.js'][62] = 0;
  _$jscoverage['renderer.js'][63] = 0;
  _$jscoverage['renderer.js'][64] = 0;
  _$jscoverage['renderer.js'][65] = 0;
  _$jscoverage['renderer.js'][66] = 0;
  _$jscoverage['renderer.js'][67] = 0;
  _$jscoverage['renderer.js'][70] = 0;
  _$jscoverage['renderer.js'][74] = 0;
  _$jscoverage['renderer.js'][77] = 0;
  _$jscoverage['renderer.js'][80] = 0;
  _$jscoverage['renderer.js'][81] = 0;
  _$jscoverage['renderer.js'][85] = 0;
  _$jscoverage['renderer.js'][88] = 0;
  _$jscoverage['renderer.js'][89] = 0;
  _$jscoverage['renderer.js'][90] = 0;
  _$jscoverage['renderer.js'][93] = 0;
  _$jscoverage['renderer.js'][96] = 0;
  _$jscoverage['renderer.js'][97] = 0;
  _$jscoverage['renderer.js'][98] = 0;
  _$jscoverage['renderer.js'][102] = 0;
  _$jscoverage['renderer.js'][104] = 0;
  _$jscoverage['renderer.js'][110] = 0;
  _$jscoverage['renderer.js'][112] = 0;
  _$jscoverage['renderer.js'][114] = 0;
  _$jscoverage['renderer.js'][115] = 0;
  _$jscoverage['renderer.js'][116] = 0;
  _$jscoverage['renderer.js'][117] = 0;
  _$jscoverage['renderer.js'][118] = 0;
  _$jscoverage['renderer.js'][119] = 0;
  _$jscoverage['renderer.js'][122] = 0;
  _$jscoverage['renderer.js'][123] = 0;
  _$jscoverage['renderer.js'][124] = 0;
  _$jscoverage['renderer.js'][125] = 0;
  _$jscoverage['renderer.js'][126] = 0;
  _$jscoverage['renderer.js'][128] = 0;
  _$jscoverage['renderer.js'][131] = 0;
  _$jscoverage['renderer.js'][132] = 0;
  _$jscoverage['renderer.js'][133] = 0;
  _$jscoverage['renderer.js'][136] = 0;
  _$jscoverage['renderer.js'][137] = 0;
  _$jscoverage['renderer.js'][140] = 0;
  _$jscoverage['renderer.js'][141] = 0;
  _$jscoverage['renderer.js'][142] = 0;
  _$jscoverage['renderer.js'][145] = 0;
  _$jscoverage['renderer.js'][146] = 0;
  _$jscoverage['renderer.js'][149] = 0;
  _$jscoverage['renderer.js'][150] = 0;
  _$jscoverage['renderer.js'][153] = 0;
  _$jscoverage['renderer.js'][154] = 0;
  _$jscoverage['renderer.js'][155] = 0;
  _$jscoverage['renderer.js'][156] = 0;
  _$jscoverage['renderer.js'][158] = 0;
  _$jscoverage['renderer.js'][159] = 0;
  _$jscoverage['renderer.js'][160] = 0;
  _$jscoverage['renderer.js'][162] = 0;
  _$jscoverage['renderer.js'][163] = 0;
  _$jscoverage['renderer.js'][164] = 0;
  _$jscoverage['renderer.js'][165] = 0;
  _$jscoverage['renderer.js'][166] = 0;
  _$jscoverage['renderer.js'][167] = 0;
  _$jscoverage['renderer.js'][168] = 0;
  _$jscoverage['renderer.js'][171] = 0;
  _$jscoverage['renderer.js'][172] = 0;
  _$jscoverage['renderer.js'][173] = 0;
  _$jscoverage['renderer.js'][180] = 0;
  _$jscoverage['renderer.js'][181] = 0;
  _$jscoverage['renderer.js'][183] = 0;
  _$jscoverage['renderer.js'][184] = 0;
  _$jscoverage['renderer.js'][185] = 0;
  _$jscoverage['renderer.js'][186] = 0;
  _$jscoverage['renderer.js'][187] = 0;
  _$jscoverage['renderer.js'][189] = 0;
  _$jscoverage['renderer.js'][190] = 0;
  _$jscoverage['renderer.js'][192] = 0;
  _$jscoverage['renderer.js'][193] = 0;
  _$jscoverage['renderer.js'][194] = 0;
  _$jscoverage['renderer.js'][195] = 0;
  _$jscoverage['renderer.js'][198] = 0;
  _$jscoverage['renderer.js'][199] = 0;
  _$jscoverage['renderer.js'][202] = 0;
  _$jscoverage['renderer.js'][205] = 0;
  _$jscoverage['renderer.js'][206] = 0;
  _$jscoverage['renderer.js'][209] = 0;
  _$jscoverage['renderer.js'][212] = 0;
  _$jscoverage['renderer.js'][213] = 0;
  _$jscoverage['renderer.js'][214] = 0;
  _$jscoverage['renderer.js'][215] = 0;
  _$jscoverage['renderer.js'][217] = 0;
  _$jscoverage['renderer.js'][218] = 0;
  _$jscoverage['renderer.js'][219] = 0;
  _$jscoverage['renderer.js'][220] = 0;
  _$jscoverage['renderer.js'][224] = 0;
  _$jscoverage['renderer.js'][226] = 0;
  _$jscoverage['renderer.js'][232] = 0;
  _$jscoverage['renderer.js'][233] = 0;
  _$jscoverage['renderer.js'][234] = 0;
  _$jscoverage['renderer.js'][236] = 0;
  _$jscoverage['renderer.js'][237] = 0;
  _$jscoverage['renderer.js'][238] = 0;
  _$jscoverage['renderer.js'][239] = 0;
  _$jscoverage['renderer.js'][242] = 0;
  _$jscoverage['renderer.js'][253] = 0;
  _$jscoverage['renderer.js'][254] = 0;
  _$jscoverage['renderer.js'][257] = 0;
  _$jscoverage['renderer.js'][258] = 0;
  _$jscoverage['renderer.js'][259] = 0;
  _$jscoverage['renderer.js'][261] = 0;
  _$jscoverage['renderer.js'][262] = 0;
  _$jscoverage['renderer.js'][263] = 0;
  _$jscoverage['renderer.js'][264] = 0;
  _$jscoverage['renderer.js'][268] = 0;
  _$jscoverage['renderer.js'][270] = 0;
  _$jscoverage['renderer.js'][272] = 0;
}
_$jscoverage['renderer.js'].source = ["// renderer.js","// renders using a data record and a viewExecutable object","// &#194;&#169; Harald Rudell 2012","// code may run in browser or on server","",";(function (isNode, WF) {","\t","\tif (isNode) {","\t\t// on node, text functions need to be explicitly imported","\t\t// html5text.js adds functions to the WF object","\t\trequire('./html5text')","\t\t// export the render function for compiler.js","\t\tmodule.exports.render = render","\t}","\t// browser and Node: export render to the WF object","\tWF.render = render","","\t/*","\trender function: inserts data from record into html","\trecord: key-value json object","\tviewExecutable: a structure from compileHtml5 or a fragmentName or fragmentName.domain","\tdomain: optional string suggested domain","","\tincluded fragments:","\ton server: provided by renderInclude","\tin browser: provided by WF.fragments","\t*/","\tfunction render(record, viewExecutable, domain) {","\t\trecord = Object(record)","","\t\t// for browser, allow rendering by fragment name","\t\tif (typeof viewExecutable == 'string') {","\t\t\tviewExecutable = getFragment(viewExecutable, domain)","\t\t\tif (typeof viewExecutable == 'string') return viewExecutable","\t\t}","","\t\t// controlling final output","\t\tvar result = []","\t\tvar contentsIndex = 0","\t\tvar tagObject","\t\tvar clonedTag","\t\tvar suppressedContent","\t\tvar suppressedTag","\t\tvar prints","","\t\t// publics for custom functions","\t\tvar renderStep = {","\t\t\tprint: print,","\t\t\tprintRaw: printRaw,","\t\t\terror: error,","\t\t\tcloneTag: cloneTag,","\t\t\tsuppressContent: suppressContent,","\t\t\tsuppressTag: suppressTag,","\t\t\tgetField: getField,","\t\t\tdomain: viewExecutable.domain","\t\t}","","\t\t// render the data links","\t\tviewExecutable.dataLinks.forEach(function (dataLink) {","","\t\t\t// prepare for resolve invocation","\t\t\ttagObject = dataLink.t || false","\t\t\trenderStep.content = dataLink.t ? viewExecutable.pieces[dataLink.t.i + 1] : null","\t\t\tclonedTag = false","\t\t\tsuppressedContent = false","\t\t\tsuppressedTag = false","\t\t\tprints = []","","\t\t\t// print to prints buffer","\t\t\tresolve.call(renderStep, dataLink.d)","","\t\t\t// output to result","\t\t\t// certain actions forces us to actually do something","\t\t\tif (clonedTag || suppressedContent || prints.length || suppressedTag) {","","\t\t\t\t// get the tag's index","\t\t\t\tvar flushToIndex = dataLink.t ? dataLink.t.i : 0","","\t\t\t\t// deal with a modified tag","\t\t\t\tif (flushToIndex)","\t\t\t\t\tif (clonedTag || suppressedTag) {","\t\t\t\t\t\t// we need to output a customized tag","","\t\t\t\t\t\t// flush everything until the tag","\t\t\t\t\t\tresult.push.apply(result, viewExecutable.pieces.slice(contentsIndex, flushToIndex))","\t\t\t\t\t\t","\t\t\t\t\t\t// output customized tag","\t\t\t\t\t\tif (!suppressedTag) result.push(printTag(tagObject))","\t\t\t\t\t\tcontentsIndex = flushToIndex + 1","\t\t\t\t\t} else flushToIndex++","","\t\t\t\t// deal with supressed content","\t\t\t\tif (suppressedContent || prints.length) {","","\t\t\t\t\t// flush everything until the content","\t\t\t\t\tif (flushToIndex &gt; contentsIndex) {","\t\t\t\t\t\tresult.push.apply(result, viewExecutable.pieces.slice(contentsIndex, flushToIndex))","\t\t\t\t\t\tcontentsIndex = flushToIndex","\t\t\t\t\t}","","\t\t\t\t\t// output prints","\t\t\t\t\tresult.push.apply(result, prints)","","\t\t\t\t\tif (suppressedContent) contentsIndex++","\t\t\t\t}","\t\t\t}","\t\t})","","\t\t// output final html","\t\tresult.push.apply(result, viewExecutable.pieces.slice(contentsIndex))","","\t\treturn result.join('')","","\t\tfunction getField(name) {","\t\t\tvar result","\t\t\tname = String(name)","\t\t\tif (name.length) result = record[name]","\t\t\telse result = clone(record)","\t\t\treturn result","\t\t}","","\t\tfunction cloneTag() {","\t\t\tif (!clonedTag) {","\t\t\t\tclonedTag = true","\t\t\t\tif (!tagObject) tagObject = {t:'', i:0, a:{}, c:[]}","\t\t\t\telse tagObject = clone(tagObject)","\t\t\t}","\t\t\treturn tagObject","\t\t}","","\t\tfunction suppressContent() {","\t\t\tsuppressedContent = true","\t\t\tthis.content = ''","\t\t}","","\t\tfunction suppressTag() {","\t\t\tsuppressedTag = true","\t\t}","","\t\tfunction error(str) {","\t\t\tif (typeof str != 'string') str = String(str)","\t\t\tprint(str)","\t\t}","","\t\tfunction print(str) {","\t\t\tprintRaw(WF.functions.textToNormal(str))","\t\t}","","\t\tfunction printRaw(str) {","\t\t\tprints.push(str)","\t\t}","","\t\tfunction printTag(t) {","\t\t\tvar result = []","\t\t\tresult.push('&lt;')","\t\t\tresult.push(t.t)","","\t\t\tif (t.c.length) {","\t\t\t\tresult.push(' class=')","\t\t\t\tresult.push(WF.functions.textToDoubleQuotedAttributeValue(t.c.join(' ')))","\t\t\t}","\t\t\tfor (var attribute in t.a) {","\t\t\t\tresult.push(' ')","\t\t\t\tresult.push(attribute)","\t\t\t\tvar value = t.a[attribute]","\t\t\t\tif (value) {","\t\t\t\t\tresult.push('=')","\t\t\t\t\tresult.push(WF.functions.textToUnquotedAttributeValue(value))","\t\t\t\t}","\t\t\t}","\t\t\tif (t.v) result.push('/')","\t\t\tresult.push('&gt;')","\t\t\tprintRaw(result.join(''))","\t\t}","","\t} // render","","\t// this reference contains data for the rendering","\t// binding is the data source description","\tfunction resolve(dataSource) {","\t\tswitch (typeof dataSource) {","\t\tcase 'string': // insert data ahead of tag contents","\t\t\tvar text = this.getField(dataSource)","\t\t\tif (typeof text == 'object') {","\t\t\t\tvar t = []","\t\t\t\tfor (var p in text) t.push(p + ':' + text[p])","\t\t\t\ttext = t.join(', ')","\t\t\t}","\t\t\tthis.print(text)","\t\t\tbreak","\t\tcase 'object': // array or object","\t\t\tif (Array.isArray(dataSource)) { // invoke each array element","\t\t\t\tvar self = this","\t\t\t\tdataSource.forEach(function (value) {","\t\t\t\t\tresolve.call(self, value)","\t\t\t\t})","\t\t\t} else { // keys are function names","\t\t\t\tfor (var funcName in dataSource) {","\t\t\t\t\tvar params = dataSource[funcName]","","\t\t\t\t\t// func is now 'append' or 'fragment'","\t\t\t\t\tif (funcName == 'fragment') {","","\t\t\t\t\t\t// get renderFunction","\t\t\t\t\t\tif (typeof params == 'string') {","\t\t\t\t\t\t\tvar renderFunction = isNode ?","\t\t\t\t\t\t\t\trequire('./compiler').getFragment(params, this.domain) :","\t\t\t\t\t\t\t\tgetFragment(params, this.domain)","\t\t\t\t\t\t\tif (typeof renderFunction == 'function') {","","\t\t\t\t\t\t\t\t// render the fragment","\t\t\t\t\t\t\t\tvar data = renderFunction(this.getField(''))","\t\t\t\t\t\t\t\tthis.printRaw(data)","\t\t\t\t\t\t\t} else this.error(String(renderFunction))","\t\t\t\t\t\t} else  this.error('Fragment name not string')","\t\t\t\t\t} else {","\t\t\t\t\t\tvar func = WF.functions[funcName]","\t\t\t\t\t\tif (func instanceof Function) {","\t\t\t\t\t\t\tfunc.call(this, params)","\t\t\t\t\t\t} else this.error('Unknown rendering function:' + funcName)","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t\tbreak","\t\tdefault:","\t\t\tthis.error('Unknown rendering data source type:' + typeof dataSource)","\t\t}","\t}","","\t// clone enumerable properties","\t// primitives, array, and Object object honored","\tfunction clone(o) {","\t\tvar result","\t\tif (typeof(o) != 'object') result = o","\t\telse {","\t\t\tresult = Array.isArray(o) ? [] : {}","\t\t\tfor (var p in o) {","\t\t\t\tvar v = o[p]","\t\t\t\tresult[p] = typeof v == 'object' ? clone(v) : v","\t\t\t}","\t\t}","\t\treturn result","\t}","","\t/*","\tresolve a fragment, only in browser","\tfragmentname: string fragmentname or fragmentname.domain","\tdomain: optional string","","\treturn value: object on success","\totherwise string: searched f.d","\t*/","\tfunction getFragment(fragmentName, domain) {","\t\tvar result","","\t\t// get key","\t\tvar key","\t\tvar split = fragmentName.split('.')","\t\tif (split.length &gt; 1) key = split[0] + '.' + split[1]","\t\telse {","\t\t\tvar domains = WF.directory[split[0]]","\t\t\tvar d = domains  &amp;&amp; domains[domain || 0]","\t\t\tif (d) key = split[0] + '.' + d","\t\t\telse result = split[0]","\t\t}","","\t\t// result to object or the string search key","\t\tif (key &amp;&amp; !(result = WF.fragments[key])) result = key","","\t\tif (typeof result == 'string') result = 'Unknown fragment:' + result","","\t\treturn result","\t}","","})(typeof module == 'object' &amp;&amp; !!module.exports, // isNode","typeof module == 'object' &amp;&amp; !!module.exports ? require('./runtime').WF : WF) // WF"];
_$jscoverage['renderer.js'][6]++;
;
_$jscoverage['renderer.js'][6]++;
(function (isNode, WF) {
  _$jscoverage['renderer.js'][8]++;
  if (isNode) {
    _$jscoverage['renderer.js'][11]++;
    require("./html5text");
    _$jscoverage['renderer.js'][13]++;
    module.exports.render = render;
  }
  _$jscoverage['renderer.js'][16]++;
  WF.render = render;
  _$jscoverage['renderer.js'][28]++;
  function render(record, viewExecutable, domain) {
    _$jscoverage['renderer.js'][29]++;
    record = Object(record);
    _$jscoverage['renderer.js'][32]++;
    if (((typeof viewExecutable) == "string")) {
      _$jscoverage['renderer.js'][33]++;
      viewExecutable = getFragment(viewExecutable, domain);
      _$jscoverage['renderer.js'][34]++;
      if (((typeof viewExecutable) == "string")) {
        _$jscoverage['renderer.js'][34]++;
        return viewExecutable;
      }
    }
    _$jscoverage['renderer.js'][38]++;
    var result = [];
    _$jscoverage['renderer.js'][39]++;
    var contentsIndex = 0;
    _$jscoverage['renderer.js'][40]++;
    var tagObject;
    _$jscoverage['renderer.js'][41]++;
    var clonedTag;
    _$jscoverage['renderer.js'][42]++;
    var suppressedContent;
    _$jscoverage['renderer.js'][43]++;
    var suppressedTag;
    _$jscoverage['renderer.js'][44]++;
    var prints;
    _$jscoverage['renderer.js'][47]++;
    var renderStep = {print: print, printRaw: printRaw, error: error, cloneTag: cloneTag, suppressContent: suppressContent, suppressTag: suppressTag, getField: getField, domain: viewExecutable.domain};
    _$jscoverage['renderer.js'][59]++;
    viewExecutable.dataLinks.forEach((function (dataLink) {
  _$jscoverage['renderer.js'][62]++;
  tagObject = (dataLink.t || false);
  _$jscoverage['renderer.js'][63]++;
  renderStep.content = (dataLink.t? viewExecutable.pieces[(dataLink.t.i + 1)]: null);
  _$jscoverage['renderer.js'][64]++;
  clonedTag = false;
  _$jscoverage['renderer.js'][65]++;
  suppressedContent = false;
  _$jscoverage['renderer.js'][66]++;
  suppressedTag = false;
  _$jscoverage['renderer.js'][67]++;
  prints = [];
  _$jscoverage['renderer.js'][70]++;
  resolve.call(renderStep, dataLink.d);
  _$jscoverage['renderer.js'][74]++;
  if ((clonedTag || suppressedContent || prints.length || suppressedTag)) {
    _$jscoverage['renderer.js'][77]++;
    var flushToIndex = (dataLink.t? dataLink.t.i: 0);
    _$jscoverage['renderer.js'][80]++;
    if (flushToIndex) {
      _$jscoverage['renderer.js'][81]++;
      if ((clonedTag || suppressedTag)) {
        _$jscoverage['renderer.js'][85]++;
        result.push.apply(result, viewExecutable.pieces.slice(contentsIndex, flushToIndex));
        _$jscoverage['renderer.js'][88]++;
        if ((! suppressedTag)) {
          _$jscoverage['renderer.js'][88]++;
          result.push(printTag(tagObject));
        }
        _$jscoverage['renderer.js'][89]++;
        contentsIndex = (flushToIndex + 1);
      }
      else {
        _$jscoverage['renderer.js'][90]++;
        (flushToIndex++);
      }
    }
    _$jscoverage['renderer.js'][93]++;
    if ((suppressedContent || prints.length)) {
      _$jscoverage['renderer.js'][96]++;
      if ((flushToIndex > contentsIndex)) {
        _$jscoverage['renderer.js'][97]++;
        result.push.apply(result, viewExecutable.pieces.slice(contentsIndex, flushToIndex));
        _$jscoverage['renderer.js'][98]++;
        contentsIndex = flushToIndex;
      }
      _$jscoverage['renderer.js'][102]++;
      result.push.apply(result, prints);
      _$jscoverage['renderer.js'][104]++;
      if (suppressedContent) {
        _$jscoverage['renderer.js'][104]++;
        (contentsIndex++);
      }
    }
  }
}));
    _$jscoverage['renderer.js'][110]++;
    result.push.apply(result, viewExecutable.pieces.slice(contentsIndex));
    _$jscoverage['renderer.js'][112]++;
    return result.join("");
    _$jscoverage['renderer.js'][114]++;
    function getField(name) {
      _$jscoverage['renderer.js'][115]++;
      var result;
      _$jscoverage['renderer.js'][116]++;
      name = String(name);
      _$jscoverage['renderer.js'][117]++;
      if (name.length) {
        _$jscoverage['renderer.js'][117]++;
        result = record[name];
      }
      else {
        _$jscoverage['renderer.js'][118]++;
        result = clone(record);
      }
      _$jscoverage['renderer.js'][119]++;
      return result;
}
    _$jscoverage['renderer.js'][122]++;
    function cloneTag() {
      _$jscoverage['renderer.js'][123]++;
      if ((! clonedTag)) {
        _$jscoverage['renderer.js'][124]++;
        clonedTag = true;
        _$jscoverage['renderer.js'][125]++;
        if ((! tagObject)) {
          _$jscoverage['renderer.js'][125]++;
          tagObject = {t: "", i: 0, a: {}, c: []};
        }
        else {
          _$jscoverage['renderer.js'][126]++;
          tagObject = clone(tagObject);
        }
      }
      _$jscoverage['renderer.js'][128]++;
      return tagObject;
}
    _$jscoverage['renderer.js'][131]++;
    function suppressContent() {
      _$jscoverage['renderer.js'][132]++;
      suppressedContent = true;
      _$jscoverage['renderer.js'][133]++;
      this.content = "";
}
    _$jscoverage['renderer.js'][136]++;
    function suppressTag() {
      _$jscoverage['renderer.js'][137]++;
      suppressedTag = true;
}
    _$jscoverage['renderer.js'][140]++;
    function error(str) {
      _$jscoverage['renderer.js'][141]++;
      if (((typeof str) != "string")) {
        _$jscoverage['renderer.js'][141]++;
        str = String(str);
      }
      _$jscoverage['renderer.js'][142]++;
      print(str);
}
    _$jscoverage['renderer.js'][145]++;
    function print(str) {
      _$jscoverage['renderer.js'][146]++;
      printRaw(WF.functions.textToNormal(str));
}
    _$jscoverage['renderer.js'][149]++;
    function printRaw(str) {
      _$jscoverage['renderer.js'][150]++;
      prints.push(str);
}
    _$jscoverage['renderer.js'][153]++;
    function printTag(t) {
      _$jscoverage['renderer.js'][154]++;
      var result = [];
      _$jscoverage['renderer.js'][155]++;
      result.push("<");
      _$jscoverage['renderer.js'][156]++;
      result.push(t.t);
      _$jscoverage['renderer.js'][158]++;
      if (t.c.length) {
        _$jscoverage['renderer.js'][159]++;
        result.push(" class=");
        _$jscoverage['renderer.js'][160]++;
        result.push(WF.functions.textToDoubleQuotedAttributeValue(t.c.join(" ")));
      }
      _$jscoverage['renderer.js'][162]++;
      for (var attribute in t.a) {
        _$jscoverage['renderer.js'][163]++;
        result.push(" ");
        _$jscoverage['renderer.js'][164]++;
        result.push(attribute);
        _$jscoverage['renderer.js'][165]++;
        var value = t.a[attribute];
        _$jscoverage['renderer.js'][166]++;
        if (value) {
          _$jscoverage['renderer.js'][167]++;
          result.push("=");
          _$jscoverage['renderer.js'][168]++;
          result.push(WF.functions.textToUnquotedAttributeValue(value));
        }
}
      _$jscoverage['renderer.js'][171]++;
      if (t.v) {
        _$jscoverage['renderer.js'][171]++;
        result.push("/");
      }
      _$jscoverage['renderer.js'][172]++;
      result.push(">");
      _$jscoverage['renderer.js'][173]++;
      printRaw(result.join(""));
}
}
  _$jscoverage['renderer.js'][180]++;
  function resolve(dataSource) {
    _$jscoverage['renderer.js'][181]++;
    switch ((typeof dataSource)) {
    case "string":
      _$jscoverage['renderer.js'][183]++;
      var text = this.getField(dataSource);
      _$jscoverage['renderer.js'][184]++;
      if (((typeof text) == "object")) {
        _$jscoverage['renderer.js'][185]++;
        var t = [];
        _$jscoverage['renderer.js'][186]++;
        for (var p in text) {
          _$jscoverage['renderer.js'][186]++;
          t.push((p + ":" + text[p]));
}
        _$jscoverage['renderer.js'][187]++;
        text = t.join(", ");
      }
      _$jscoverage['renderer.js'][189]++;
      this.print(text);
      _$jscoverage['renderer.js'][190]++;
      break;
    case "object":
      _$jscoverage['renderer.js'][192]++;
      if (Array.isArray(dataSource)) {
        _$jscoverage['renderer.js'][193]++;
        var self = this;
        _$jscoverage['renderer.js'][194]++;
        dataSource.forEach((function (value) {
  _$jscoverage['renderer.js'][195]++;
  resolve.call(self, value);
}));
      }
      else {
        _$jscoverage['renderer.js'][198]++;
        for (var funcName in dataSource) {
          _$jscoverage['renderer.js'][199]++;
          var params = dataSource[funcName];
          _$jscoverage['renderer.js'][202]++;
          if ((funcName == "fragment")) {
            _$jscoverage['renderer.js'][205]++;
            if (((typeof params) == "string")) {
              _$jscoverage['renderer.js'][206]++;
              var renderFunction = (isNode? require("./compiler").getFragment(params, this.domain): getFragment(params, this.domain));
              _$jscoverage['renderer.js'][209]++;
              if (((typeof renderFunction) == "function")) {
                _$jscoverage['renderer.js'][212]++;
                var data = renderFunction(this.getField(""));
                _$jscoverage['renderer.js'][213]++;
                this.printRaw(data);
              }
              else {
                _$jscoverage['renderer.js'][214]++;
                this.error(String(renderFunction));
              }
            }
            else {
              _$jscoverage['renderer.js'][215]++;
              this.error("Fragment name not string");
            }
          }
          else {
            _$jscoverage['renderer.js'][217]++;
            var func = WF.functions[funcName];
            _$jscoverage['renderer.js'][218]++;
            if ((func instanceof Function)) {
              _$jscoverage['renderer.js'][219]++;
              func.call(this, params);
            }
            else {
              _$jscoverage['renderer.js'][220]++;
              this.error(("Unknown rendering function:" + funcName));
            }
          }
}
      }
      _$jscoverage['renderer.js'][224]++;
      break;
    default:
      _$jscoverage['renderer.js'][226]++;
      this.error(("Unknown rendering data source type:" + (typeof dataSource)));
    }
}
  _$jscoverage['renderer.js'][232]++;
  function clone(o) {
    _$jscoverage['renderer.js'][233]++;
    var result;
    _$jscoverage['renderer.js'][234]++;
    if (((typeof o) != "object")) {
      _$jscoverage['renderer.js'][234]++;
      result = o;
    }
    else {
      _$jscoverage['renderer.js'][236]++;
      result = (Array.isArray(o)? []: {});
      _$jscoverage['renderer.js'][237]++;
      for (var p in o) {
        _$jscoverage['renderer.js'][238]++;
        var v = o[p];
        _$jscoverage['renderer.js'][239]++;
        result[p] = (((typeof v) == "object")? clone(v): v);
}
    }
    _$jscoverage['renderer.js'][242]++;
    return result;
}
  _$jscoverage['renderer.js'][253]++;
  function getFragment(fragmentName, domain) {
    _$jscoverage['renderer.js'][254]++;
    var result;
    _$jscoverage['renderer.js'][257]++;
    var key;
    _$jscoverage['renderer.js'][258]++;
    var split = fragmentName.split(".");
    _$jscoverage['renderer.js'][259]++;
    if ((split.length > 1)) {
      _$jscoverage['renderer.js'][259]++;
      key = (split[0] + "." + split[1]);
    }
    else {
      _$jscoverage['renderer.js'][261]++;
      var domains = WF.directory[split[0]];
      _$jscoverage['renderer.js'][262]++;
      var d = (domains && domains[(domain || 0)]);
      _$jscoverage['renderer.js'][263]++;
      if (d) {
        _$jscoverage['renderer.js'][263]++;
        key = (split[0] + "." + d);
      }
      else {
        _$jscoverage['renderer.js'][264]++;
        result = split[0];
      }
    }
    _$jscoverage['renderer.js'][268]++;
    if ((key && (! (result = WF.fragments[key])))) {
      _$jscoverage['renderer.js'][268]++;
      result = key;
    }
    _$jscoverage['renderer.js'][270]++;
    if (((typeof result) == "string")) {
      _$jscoverage['renderer.js'][270]++;
      result = ("Unknown fragment:" + result);
    }
    _$jscoverage['renderer.js'][272]++;
    return result;
}
})((((typeof module) == "object") && (! (! module.exports))), ((((typeof module) == "object") && (! (! module.exports)))? require("./runtime").WF: WF));

/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['html5text.js']) {
  _$jscoverage['html5text.js'] = [];
  _$jscoverage['html5text.js'][17] = 0;
  _$jscoverage['html5text.js'][20] = 0;
  _$jscoverage['html5text.js'][28] = 0;
  _$jscoverage['html5text.js'][31] = 0;
  _$jscoverage['html5text.js'][38] = 0;
  _$jscoverage['html5text.js'][39] = 0;
  _$jscoverage['html5text.js'][51] = 0;
  _$jscoverage['html5text.js'][54] = 0;
  _$jscoverage['html5text.js'][55] = 0;
  _$jscoverage['html5text.js'][56] = 0;
  _$jscoverage['html5text.js'][57] = 0;
  _$jscoverage['html5text.js'][60] = 0;
  _$jscoverage['html5text.js'][65] = 0;
  _$jscoverage['html5text.js'][66] = 0;
  _$jscoverage['html5text.js'][68] = 0;
  _$jscoverage['html5text.js'][69] = 0;
  _$jscoverage['html5text.js'][80] = 0;
  _$jscoverage['html5text.js'][81] = 0;
  _$jscoverage['html5text.js'][100] = 0;
  _$jscoverage['html5text.js'][101] = 0;
  _$jscoverage['html5text.js'][116] = 0;
  _$jscoverage['html5text.js'][117] = 0;
}
_$jscoverage['html5text.js'].source = ["// html5text.js","// convert between types of html5 character data","// &#194;&#169; Harald Rudell 2012","// code may run in browser or on server","","/*","http://dev.w3.org/html5/markup/","http://dev.w3.org/html5/spec/named-character-references.html","http://dev.w3.org/html5/markup/syntax.html#hex-charref","","html5 text:","http://dev.w3.org/html5/markup/syntax.html#syntax-text","text does not contain:","control characters other than html5 space characters","permanently undefined unicode characters","*/",";(function (isNode, WF) {","","\t// the functions this file exports","\tvar funcs = {","\t\ttextToNormal: textToNormal,","\t\ttextToReplaceable: textToReplaceable,","\t\ttextToAttributeName: textToAttributeName,","\t\ttextToUnquotedAttributeValue: textToUnquotedAttributeValue,","\t\ttextToDoubleQuotedAttributeValue: textToDoubleQuotedAttributeValue,\t\t","\t}","","\tif (isNode) module.exports = funcs","","\t// both browser and Node: export to WF","\tfor (var func in funcs) WF.functions[func] = funcs[func]","","\t/*","\tescape text for use as normal character data","\thttp://dev.w3.org/html5/markup/syntax.html#normal-character-data","\t&amp;amp; &amp;lt;","\t*/","\tfunction textToNormal(str) {","\t\treturn String(str)","\t\t\t.replace(/&amp;/g, '&amp;amp;')","\t\t\t.replace(/&lt;/g, '&amp;lt;')","\t}","","\t/*","\tescape text for use in title and textarea elements","\thttp://dev.w3.org/html5/markup/syntax.html#replaceable-character-data","\tambiguous ampersands we don't care about","\tmake sure we do not have any closing tags","\tinsert a space if a closing tag is found","\t*/","\tfunction textToReplaceable(str, tag) {","","\t\t// insert space after ambiguous ampersands","\t\tvar result = String(str).replace(/&amp;./gm, function(match) {","\t\t\tif (match.length == 2) {","\t\t\t\tif (' &lt;&amp;'.indexOf(match[1]) == -1) {","\t\t\t\t\tmatch = '&amp; ' + match[1]","\t\t\t\t}","\t\t\t}","\t\t\treturn match","\t\t})","","\t\t// insert space to avoid text that contains a closing tag","\t\t// this function applies to title and textarea elements","\t\tif (!tag) tag = 'title'","\t\tvar regExp = new RegExp('&lt;\\/' + tag, 'gim')","","\t\treturn result.replace(regExp, function(match) {","\t\t\t\treturn match.substring(0, 2) + ' ' + match.substring(2)","\t\t\t})","\t}","","\t/*","\tescape text for use as attribute name","\thttp://dev.w3.org/html5/markup/syntax.html#attribute-name","\tnote that an empty string is an illegal value","\t&amp;quot; &amp;apos; &amp;gt; &amp;sol; &amp;equals;","\tspace characters: space \\t\\n\\f\\r","\t*/","\tfunction textToAttributeName(str) {","\t\treturn textToNormal(str)","\t\t\t.replace(/\"/, '&amp;quot;')","\t\t\t.replace(/'/, '&amp;apos;')","\t\t\t.replace(/&gt;/, '&amp;gt;')","\t\t\t.replace(/\\//, '&amp;sol;')","\t\t\t.replace(/=/, '&amp;equals;')","\t\t\t.replace(/ /, '&amp;#x20;')","\t\t\t.replace(/\\t/, '&amp;#x9;')","\t\t\t.replace(/\\n/, '&amp;#xa;')","\t\t\t.replace(/\\f/, '&amp;#xc;')","\t\t\t.replace(/\\r/, '')","\t}","","\t/*","\tescape text for use as unquoted attribute value","\thttp://dev.w3.org/html5/markup/syntax.html#attr-value-unquoted","\tnote: empty string is an illegal value","\t&amp;acute; &amp;apos; &amp;quot; &amp;gt;","\t*/","\tfunction textToUnquotedAttributeValue(str) {","\t\treturn String(str)","\t\t\t.replace(/\"/, '&amp;quot;')","\t\t\t.replace(/'/, '&amp;apos;')","\t\t\t.replace(/=/, '&amp;equals;')","\t\t\t.replace(/&gt;/, '&amp;gt;')","\t\t\t.replace(/&lt;/g, '&amp;lt;')","\t\t\t.replace(/ /, '&amp;#x20;')","\t\t\t.replace(/\\t/, '&amp;#x9;')","\t\t\t.replace(/\\n/, '&amp;#xa;')","\t\t\t.replace(/\\f/, '&amp;#xc;')","\t\t\t.replace(/\\r/, '')","\t\t\t.replace(/`/, '&amp;grave;')","\t}","","\t// escape text for use as unquoted attribute value","\tfunction textToDoubleQuotedAttributeValue(str) {","\t\treturn '\"' +","\t\t\tString(str).replace(/\"/, '&amp;quot;')","\t\t\t+ '\"'","\t}","","})(typeof module == 'object' &amp;&amp; !!module.exports, // isNode","typeof module == 'object' &amp;&amp; !!module.exports ? require('./runtime').WF : WF) // WF"];
_$jscoverage['html5text.js'][17]++;
;
_$jscoverage['html5text.js'][17]++;
(function (isNode, WF) {
  _$jscoverage['html5text.js'][20]++;
  var funcs = {textToNormal: textToNormal, textToReplaceable: textToReplaceable, textToAttributeName: textToAttributeName, textToUnquotedAttributeValue: textToUnquotedAttributeValue, textToDoubleQuotedAttributeValue: textToDoubleQuotedAttributeValue};
  _$jscoverage['html5text.js'][28]++;
  if (isNode) {
    _$jscoverage['html5text.js'][28]++;
    module.exports = funcs;
  }
  _$jscoverage['html5text.js'][31]++;
  for (var func in funcs) {
    _$jscoverage['html5text.js'][31]++;
    WF.functions[func] = funcs[func];
}
  _$jscoverage['html5text.js'][38]++;
  function textToNormal(str) {
    _$jscoverage['html5text.js'][39]++;
    return String(str).replace(/&/g, "&amp;").replace(/</g, "&lt;");
}
  _$jscoverage['html5text.js'][51]++;
  function textToReplaceable(str, tag) {
    _$jscoverage['html5text.js'][54]++;
    var result = String(str).replace(/&./gm, (function (match) {
  _$jscoverage['html5text.js'][55]++;
  if ((match.length == 2)) {
    _$jscoverage['html5text.js'][56]++;
    if ((" <&".indexOf(match[1]) == -1)) {
      _$jscoverage['html5text.js'][57]++;
      match = ("& " + match[1]);
    }
  }
  _$jscoverage['html5text.js'][60]++;
  return match;
}));
    _$jscoverage['html5text.js'][65]++;
    if ((! tag)) {
      _$jscoverage['html5text.js'][65]++;
      tag = "title";
    }
    _$jscoverage['html5text.js'][66]++;
    var regExp = new RegExp(("</" + tag), "gim");
    _$jscoverage['html5text.js'][68]++;
    return result.replace(regExp, (function (match) {
  _$jscoverage['html5text.js'][69]++;
  return (match.substring(0, 2) + " " + match.substring(2));
}));
}
  _$jscoverage['html5text.js'][80]++;
  function textToAttributeName(str) {
    _$jscoverage['html5text.js'][81]++;
    return textToNormal(str).replace(/"/, "&quot;").replace(/'/, "&apos;").replace(/>/, "&gt;").replace(/\//, "&sol;").replace(/=/, "&equals;").replace(/ /, "&#x20;").replace(/\t/, "&#x9;").replace(/\n/, "&#xa;").replace(/\f/, "&#xc;").replace(/\r/, "");
}
  _$jscoverage['html5text.js'][100]++;
  function textToUnquotedAttributeValue(str) {
    _$jscoverage['html5text.js'][101]++;
    return String(str).replace(/"/, "&quot;").replace(/'/, "&apos;").replace(/=/, "&equals;").replace(/>/, "&gt;").replace(/</g, "&lt;").replace(/ /, "&#x20;").replace(/\t/, "&#x9;").replace(/\n/, "&#xa;").replace(/\f/, "&#xc;").replace(/\r/, "").replace(/`/, "&grave;");
}
  _$jscoverage['html5text.js'][116]++;
  function textToDoubleQuotedAttributeValue(str) {
    _$jscoverage['html5text.js'][117]++;
    return ("\"" + String(str).replace(/"/, "&quot;") + "\"");
}
})((((typeof module) == "object") && (! (! module.exports))), ((((typeof module) == "object") && (! (! module.exports)))? require("./runtime").WF: WF));


